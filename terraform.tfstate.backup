{
  "version": 4,
  "terraform_version": "1.13.0",
  "serial": 11,
  "lineage": "c783550c-965b-6ccc-7dd7-794b0fab1176",
  "outputs": {
    "vm_external_ip": {
      "value": "34.41.64.212",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "vm",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_rsa": "",
                "disk_encryption_key_sha256": "",
                "disk_encryption_service_account": "",
                "force_attach": false,
                "guest_os_features": [
                  "VIRTIO_SCSI_MULTIQUEUE",
                  "SEV_CAPABLE",
                  "SEV_SNP_CAPABLE",
                  "SEV_LIVE_MIGRATABLE",
                  "SEV_LIVE_MIGRATABLE_V2",
                  "SNP_SVSM_CAPABLE",
                  "IDPF",
                  "TDX_CAPABLE",
                  "UEFI_COMPATIBLE",
                  "GVNIC"
                ],
                "initialize_params": [
                  {
                    "architecture": "X86_64",
                    "enable_confidential_compute": false,
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2404-noble-amd64-v20250819",
                    "labels": {},
                    "provisioned_iops": 0,
                    "provisioned_throughput": 0,
                    "resource_manager_tags": null,
                    "resource_policies": [],
                    "size": 40,
                    "snapshot": "",
                    "source_image_encryption_key": [],
                    "source_snapshot_encryption_key": [],
                    "storage_pool": "",
                    "type": "pd-standard"
                  }
                ],
                "interface": "",
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/sylvan-hydra-464608-p3/zones/us-central1-a/disks/test-vm"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "creation_timestamp": "2025-08-24T08:18:54.898-07:00",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "effective_labels": {
              "goog-terraform-provisioned": "true"
            },
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/sylvan-hydra-464608-p3/zones/us-central1-a/instances/test-vm",
            "instance_encryption_key": [],
            "instance_id": "648876811660727217",
            "key_revocation_action_type": "",
            "label_fingerprint": "vezUS-42LLM=",
            "labels": null,
            "machine_type": "e2-medium",
            "metadata": null,
            "metadata_fingerprint": "OidtPTcaLXA=",
            "metadata_startup_script": "#!/bin/bash -x\n\nVERBOSE=0\nOS_NAME=\nOS_VERSION=\nOS_CODE_NAME=\nARCH=\nexport IP=\nexport DEBIAN_FRONTEND=noninteractive\n[[ -z \"$CREATE_AMI\" ]] \u0026\u0026 export CREATE_AMI\n[[ -z \"$DB_ENGINE\" ]] \u0026\u0026 export DB_ENGINE=\"MYSQL_8.0\"\n\nexport IS_LXC=0\nif grep -q container=lxc \"/proc/1/environ\"; then\n  export IS_LXC=1\nfi\n\nRED_TEXT_COLOR=`tput setaf 1`\nGREEN_TEXT_COLOR=`tput setaf 2`\nYELLOW_TEXT_COLOR=`tput setaf 3`\nRESET_TEXT_COLOR=`tput sgr0`\n\nif [ -z \"${SWAP}\" ]; then\n  SWAP=true\nfi\n\ndie()\n{\n  /bin/echo -e \"ERROR: $*\" \u003e\u00262\n  exit 1\n}\n\nverbose()\n{\n  if [ \"$VERBOSE\" -eq \"1\" ]; then\n    echo \"$@\" \u003e\u00262\n  fi\n}\n\nsetOSInfo()\n{\n  [ -e '/bin/uname' ] \u0026\u0026 uname='/bin/uname' || uname='/usr/bin/uname'\n  ARCH=`uname -m`\n  OPERATING_SYSTEM=`uname -s`\n  if [ \"$OPERATING_SYSTEM\" = 'Linux' ]; then\n    if [ -e '/etc/debian_version' ]; then\n      if [ -e '/etc/lsb-release' ]; then\n        . /etc/lsb-release\n        OS_NAME=$DISTRIB_ID\n        OS_CODE_NAME=$(awk -F'=' '/VERSION_CODENAME/ {print $2}' /etc/os-release)\n        OS_VERSION=$DISTRIB_RELEASE\n      else\n        OS_NAME='Debian'\n        OS_CODE_NAME=$(awk -F= '/VERSION_CODENAME/{print $2}' /etc/os-release)\n        DEBIAN_VERSION=$(cat /etc/debian_version)\n        OS_VERSION=`echo $DEBIAN_VERSION | cut -d \".\" -f -1`\n      fi\n    else\n      die \"Unable to detect Debian or Ubuntu.\"\n    fi\n  else\n    die \"Operating System needs to be Linux.\"\n  fi\n\n  verbose \"Architecture: $ARCH\"\n  verbose \"OS Name: $OS_NAME\"\n  verbose \"OS Version: $OS_VERSION\"\n}\n\ncheckRequirements()\n{\n  apt update\n  apt -y install lsof\n  checkOperatingSystem\n  checkPortConflicts\n  checkDatabaseEngine\n  checkIfHostnameResolves\n  checkRootPartitionSize\n}\n\ncheckOperatingSystem()\n{\n  if [ \"$OS_NAME\" = \"Debian\" ] || [ \"$OS_NAME\" = \"Ubuntu\" ]; then\n    if [ \"$OS_NAME\" = \"Debian\" ]; then\n      if [ \"$OS_VERSION\" != \"11\" ] \u0026\u0026 [ \"$OS_VERSION\" != \"12\" ]; then\n        die \"Only Debian 11 (Bullseye) or Debian 12 (Bookworm) are supported.\"\n      fi\n    else\n      if [ \"$OS_VERSION\" != \"22.04\" ] \u0026\u0026 [ \"$OS_VERSION\" != \"24.04\" ]; then\n        die \"Only Ubuntu 22.04 LTS or Ubuntu 24.04 LTS are supported.\"\n      fi\n    fi\n  else\n    die \"Operating System needs to be Debian or Ubuntu.\"\n  fi\n}\n\ncheckPortConflicts()\n{\n  local OPEN_PORTS=$(lsof -i:80 -i:443 -i:3306 -P -n -sTCP:LISTEN)\n  if [ -n \"${OPEN_PORTS}\" ]; then\n    die \"Your system already has services running on port 80, 443 or 3306.\"\n  fi\n}\n\ncheckDatabaseEngine() {\n  if [ \"$OS_NAME\" = \"Debian\" ]; then\n    case $OS_VERSION in\n      \"11\")\n        case $DB_ENGINE in\n          \"MYSQL_5.7\" | \"MYSQL_8.0\" | \"MARIADB_10.6\" | \"MARIADB_10.11\" | \"MARIADB_11.4\")\n            echo \"Database Engine: $DB_ENGINE\"\n          ;;\n          *)\n            die \"Database Engine $DB_ENGINE not supported.\"\n          ;;\n        esac\n      ;;\n      \"12\")\n        case $DB_ENGINE in\n          \"MYSQL_8.0\" | \"MARIADB_10.11\" | \"MARIADB_11.4\")\n            echo \"Database Engine: $DB_ENGINE\"\n          ;;\n          *)\n            die \"Database Engine $DB_ENGINE not supported.\"\n          ;;\n        esac\n      ;;\n      *)\n        die \"Unsupported Debian version: $OS_VERSION\"\n      ;;\n    esac\n  elif [ \"$OS_NAME\" = \"Ubuntu\" ]; then\n    case $OS_VERSION in\n      \"22.04\")\n        case $DB_ENGINE in\n          \"MYSQL_8.0\" | \"MARIADB_10.6\" | \"MARIADB_10.11\" | \"MARIADB_11.4\")\n            echo \"Database Engine: $DB_ENGINE\"\n          ;;\n          *)\n            die \"Database Engine $DB_ENGINE not supported.\"\n          ;;\n        esac\n      ;;\n      \"24.04\")\n        case $DB_ENGINE in\n          \"MYSQL_8.0\" | \"MARIADB_10.11\" | \"MARIADB_11.4\")\n            echo \"Database Engine: $DB_ENGINE\"\n          ;;\n          *)\n            die \"Database Engine $DB_ENGINE not supported.\"\n          ;;\n        esac\n      ;;\n      *)\n        die \"Unsupported Ubuntu version: $OS_VERSION\"\n      ;;\n    esac\n  else\n    die \"Unsupported OS: $OS_NAME\"\n  fi\n}\n\ncheckIfHostnameResolves()\n{\n  local LOCAL_IP=$(getent hosts \"$HOSTNAME\" | awk '{print $1}')\n  if [ -z \"${LOCAL_IP}\" ]; then\n    die \"Hostname $HOSTNAME does not resolve. Set a hosts entry in: /etc/hosts\"\n  fi\n}\n\ncheckRootPartitionSize()\n{\n  # In KB\n  local ROOT_PARTITION=$(df --output=avail / | sed '1d')\n  if [ $ROOT_PARTITION -lt 6000000 ]; then\n    die \"At least 6GB of free hard disk space is required\"\n  fi\n}\n\nremoveUnnecessaryPackages()\n{\n  apt -y --purge remove mysql* \u0026\u003e /dev/null\n}\n\nsetIp()\n{\n  IP=$(curl -sk --connect-timeout 10 --retry 3 --retry-delay 0 https://d3qnd54q8gb3je.cloudfront.net/)\n  IP=$(echo \"$IP\" | cut -d\",\" -f1)\n}\n\nsetupRequiredPackages()\n{\n  apt -y upgrade\n  apt -y install gnupg apt-transport-https debsums chrony redis-server\n  DEBIAN_FRONTEND=noninteractive apt-get install -y postfix\n  if [ \"$SWAP\" != false ] ; then\n    echo \"CONF_SWAPFILE=/home/.swap\" \u003e /etc/dphys-swapfile\n    echo \"CONF_SWAPSIZE=2048\" \u003e\u003e /etc/dphys-swapfile\n    echo \"CONF_MAXSWAP=2048\" \u003e\u003e /etc/dphys-swapfile\n    DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew install dphys-swapfile\n  fi\n}\n\ngenerateLocales()\n{\n  apt -y install locales locales-all\n  /usr/sbin/locale-gen en_US \u0026\u0026 /usr/sbin/locale-gen en_US.UTF-8\n}\n\naddAptSourceList()\n{\n  curl -fsSL https://d17k9fuiwb52nc.cloudfront.net/key.gpg | sudo gpg --yes --dearmor -o /etc/apt/trusted.gpg.d/cloudpanel-keyring.gpg\n\n  if [ \"$ARCH\" = \"aarch64\" ]; then\n    ORIGIN=\"d2xpdm4jldf31f.cloudfront.net\"\n  else\n    ORIGIN=\"d17k9fuiwb52nc.cloudfront.net\"\n  fi\n\n  CLOUDPANEL_SOURCE_LIST=$(cat \u003c\u003c-END\ndeb https://$ORIGIN/ $OS_CODE_NAME main\ndeb https://$ORIGIN/ $OS_CODE_NAME nginx\ndeb https://$ORIGIN/ $OS_CODE_NAME php-7.1\ndeb https://$ORIGIN/ $OS_CODE_NAME php-7.2\ndeb https://$ORIGIN/ $OS_CODE_NAME php-7.3\ndeb https://$ORIGIN/ $OS_CODE_NAME php-7.4\ndeb https://$ORIGIN/ $OS_CODE_NAME php-8.0\ndeb https://$ORIGIN/ $OS_CODE_NAME php-8.1\ndeb https://$ORIGIN/ $OS_CODE_NAME php-8.2\ndeb https://$ORIGIN/ $OS_CODE_NAME php-8.3\ndeb https://$ORIGIN/ $OS_CODE_NAME php-8.4\ndeb https://$ORIGIN/ $OS_CODE_NAME proftpd\ndeb https://$ORIGIN/ $OS_CODE_NAME varnish-7\nEND\n)\n\nCLOUDPANEL_APT_PREFERENCES=$(cat \u003c\u003c-END\nPackage: *\nPin: origin $ORIGIN\nPin-Priority: 1000\nEND\n)\n\n  echo -e \"$CLOUDPANEL_SOURCE_LIST\" \u003e /etc/apt/sources.list.d/packages.cloudpanel.io.list\n  echo -e \"$CLOUDPANEL_APT_PREFERENCES\" \u003e /etc/apt/preferences.d/00packages.cloudpanel.io.pref\n  apt -y update\n}\n\ninstallMySQL() {\n  addAptSourceList\n\n  if [ \"$OS_NAME\" = \"Debian\" ]; then\n    case $OS_VERSION in\n      \"11\")\n        case $DB_ENGINE in\n          \"MYSQL_5.7\")\n            echo \"deb https://$ORIGIN/ $OS_CODE_NAME percona-server-server-5.7\" \u003e /etc/apt/sources.list.d/percona-mysql.list\n            apt -y update\n            DEBIAN_FRONTEND=noninteractive apt -y install percona-server-client-5.7 percona-server-server-5.7\n            ;;\n          \"MYSQL_8.0\")\n            echo \"deb https://$ORIGIN/ $OS_CODE_NAME percona-server-server-8.0\" \u003e /etc/apt/sources.list.d/percona-mysql.list\n            apt -y update\n            DEBIAN_FRONTEND=noninteractive apt -y install percona-server-client percona-server-server\n            ;;\n          \"MARIADB_10.6\")\n            wget -qO- https://mariadb.org/mariadb_release_signing_key.asc | gpg --dearmor \u003e /etc/apt/trusted.gpg.d/mariadb.gpg\n            echo \"deb [arch=amd64,arm64] https://mirror.mariadb.org/repo/10.6/debian bullseye main\" \u003e /etc/apt/sources.list.d/mariadb.list\n            apt -y update\n            apt -y install mariadb-server\n            ;;\n          \"MARIADB_10.11\")\n            wget -qO- https://mariadb.org/mariadb_release_signing_key.asc | gpg --dearmor \u003e /etc/apt/trusted.gpg.d/mariadb.gpg\n            echo \"deb [arch=amd64,arm64] https://mirror.mariadb.org/repo/10.11/debian bullseye main\" \u003e /etc/apt/sources.list.d/mariadb.list\n            apt -y update\n            apt -y install mariadb-server\n            ;;\n          \"MARIADB_11.4\")\n            wget -qO- https://mariadb.org/mariadb_release_signing_key.asc | gpg --dearmor \u003e /etc/apt/trusted.gpg.d/mariadb.gpg\n            echo \"deb [arch=amd64,arm64] https://mirror.mariadb.org/repo/11.4/debian bullseye main\" \u003e /etc/apt/sources.list.d/mariadb.list\n            apt -y update\n            apt -y install mariadb-server\n            ln -sf /usr/bin/mariadb /usr/bin/mysql\n            ln -sf /usr/bin/mariadb-access /usr/bin/mysqlaccess\n            ln -sf /usr/bin/mariadb-admin /usr/bin/mysqladmin\n            ln -sf /usr/bin/mariadb-check /usr/bin/mysqlanalyze\n            ln -sf /usr/bin/mariadb-binlog /usr/bin/mysqlbinlog\n            ln -sf /usr/bin/mariadb-check /usr/bin/mysqlcheck\n            ln -sf /usr/bin/mariadb-convert-table-format /usr/bin/mysql_convert_table_format\n            ln -sf /usr/bin/mariadbd-multi /usr/bin/mysqld_multi\n            ln -sf /usr/bin/mariadbd-safe /usr/bin/mysqld_safe\n            ln -sf /usr/bin/mariadbd-safe-helper /usr/bin/mysqld_safe_helper\n            ln -sf /usr/bin/mariadb-dump /usr/bin/mysqldump\n            ln -sf /usr/bin/mariadb-dumpslow /usr/bin/mysqldumpslow\n            ln -sf /usr/bin/mariadb-find-rows /usr/bin/mysql_find_rows\n            ln -sf /usr/bin/mariadb-fix-extensions /usr/bin/mysql_fix_extensions\n            ln -sf /usr/bin/mariadb-hotcopy /usr/bin/mysqlhotcopy\n            ln -sf /usr/bin/mariadb-import /usr/bin/mysqlimport\n            ln -sf /usr/bin/mariadb-install-db /usr/bin/mysql_install_db\n            ln -sf /usr/bin/mariadb-check /usr/bin/mysqloptimize\n            ln -sf /usr/bin/mariadb-plugin /usr/bin/mysql_plugin\n            ln -sf /usr/bin/mariadb-check /usr/bin/mysqlrepair\n            ln -sf /usr/bin/mariadb-report /usr/bin/mysqlreport\n            ln -sf /usr/bin/mariadb-secure-installation /usr/bin/mysql_secure_installation\n            ln -sf /usr/bin/mariadb-setpermission /usr/bin/mysql_setpermission\n            ln -sf /usr/bin/mariadb-show /usr/bin/mysqlshow\n            ln -sf /usr/bin/mariadb-slap /usr/bin/mysqlslap\n            ln -sf /usr/bin/mariadb-tzinfo-to-sql /usr/bin/mysql_tzinfo_to_sql\n            ln -sf /usr/bin/mariadb-upgrade /usr/bin/mysql_upgrade\n            ln -sf /usr/bin/mariadb-waitpid /usr/bin/mysql_waitpid\n          ;;\n          *)\n            die \"Database Engine $DB_ENGINE not supported.\"\n            ;;\n        esac\n        ;;\n      \"12\")\n        case $DB_ENGINE in\n          \"MYSQL_8.0\")\n            echo \"deb https://$ORIGIN/ $OS_CODE_NAME percona-server-server-8.0\" \u003e /etc/apt/sources.list.d/percona-mysql.list\n            apt -y update\n            DEBIAN_FRONTEND=noninteractive apt -y install percona-server-client percona-server-server\n            ;;\n          \"MARIADB_10.11\")\n            apt -y update\n            apt -y install mariadb-server\n            ;;\n          \"MARIADB_11.4\")\n            wget -qO- https://mariadb.org/mariadb_release_signing_key.asc | gpg --dearmor \u003e /etc/apt/trusted.gpg.d/mariadb.gpg\n            echo \"deb [arch=amd64,arm64] https://mirror.mariadb.org/repo/11.4/debian bookworm main\" \u003e /etc/apt/sources.list.d/mariadb.list\n            apt -y update\n            apt -y install mariadb-server\n            ln -sf /usr/bin/mariadb /usr/bin/mysql\n            ln -sf /usr/bin/mariadb-access /usr/bin/mysqlaccess\n            ln -sf /usr/bin/mariadb-admin /usr/bin/mysqladmin\n            ln -sf /usr/bin/mariadb-check /usr/bin/mysqlanalyze\n            ln -sf /usr/bin/mariadb-binlog /usr/bin/mysqlbinlog\n            ln -sf /usr/bin/mariadb-check /usr/bin/mysqlcheck\n            ln -sf /usr/bin/mariadb-convert-table-format /usr/bin/mysql_convert_table_format\n            ln -sf /usr/bin/mariadbd-multi /usr/bin/mysqld_multi\n            ln -sf /usr/bin/mariadbd-safe /usr/bin/mysqld_safe\n            ln -sf /usr/bin/mariadbd-safe-helper /usr/bin/mysqld_safe_helper\n            ln -sf /usr/bin/mariadb-dump /usr/bin/mysqldump\n            ln -sf /usr/bin/mariadb-dumpslow /usr/bin/mysqldumpslow\n            ln -sf /usr/bin/mariadb-find-rows /usr/bin/mysql_find_rows\n            ln -sf /usr/bin/mariadb-fix-extensions /usr/bin/mysql_fix_extensions\n            ln -sf /usr/bin/mariadb-hotcopy /usr/bin/mysqlhotcopy\n            ln -sf /usr/bin/mariadb-import /usr/bin/mysqlimport\n            ln -sf /usr/bin/mariadb-install-db /usr/bin/mysql_install_db\n            ln -sf /usr/bin/mariadb-check /usr/bin/mysqloptimize\n            ln -sf /usr/bin/mariadb-plugin /usr/bin/mysql_plugin\n            ln -sf /usr/bin/mariadb-check /usr/bin/mysqlrepair\n            ln -sf /usr/bin/mariadb-report /usr/bin/mysqlreport\n            ln -sf /usr/bin/mariadb-secure-installation /usr/bin/mysql_secure_installation\n            ln -sf /usr/bin/mariadb-setpermission /usr/bin/mysql_setpermission\n            ln -sf /usr/bin/mariadb-show /usr/bin/mysqlshow\n            ln -sf /usr/bin/mariadb-slap /usr/bin/mysqlslap\n            ln -sf /usr/bin/mariadb-tzinfo-to-sql /usr/bin/mysql_tzinfo_to_sql\n            ln -sf /usr/bin/mariadb-upgrade /usr/bin/mysql_upgrade\n            ln -sf /usr/bin/mariadb-waitpid /usr/bin/mysql_waitpid\n          ;;\n          *)\n            die \"Database Engine $DB_ENGINE not supported.\"\n            ;;\n        esac\n        ;;\n      *)\n        die \"Unsupported Debian version: $OS_VERSION.\"\n        ;;\n    esac\n  elif [ \"$OS_NAME\" = \"Ubuntu\" ]; then\n    case $OS_VERSION in\n      \"22.04\")\n        case $DB_ENGINE in\n          \"MYSQL_8.0\")\n            apt -y update\n            DEBIAN_FRONTEND=noninteractive apt -y install mysql-client-8.0 mysql-server-8.0\n            ;;\n          \"MARIADB_10.6\")\n            apt -y update\n            apt -y install mariadb-server\n            ;;\n          \"MARIADB_10.11\")\n            wget -qO- https://mariadb.org/mariadb_release_signing_key.asc | gpg --dearmor \u003e /etc/apt/trusted.gpg.d/mariadb.gpg\n            echo \"deb [arch=amd64,arm64] https://mirror.mariadb.org/repo/10.11/ubuntu/ jammy main\" \u003e /etc/apt/sources.list.d/mariadb.list\n            apt -y update\n            apt -y install mariadb-server\n            ;;\n          \"MARIADB_11.4\")\n            wget -qO- https://mariadb.org/mariadb_release_signing_key.asc | gpg --dearmor \u003e /etc/apt/trusted.gpg.d/mariadb.gpg\n            echo \"deb [arch=amd64,arm64] https://mirror.mariadb.org/repo/11.4/ubuntu jammy main\" \u003e /etc/apt/sources.list.d/mariadb.list\n            apt -y update\n            apt -y install mariadb-server\n            ;;\n          *)\n            die \"Database Engine $DB_ENGINE not supported.\"\n            ;;\n        esac\n        ;;\n      \"24.04\")\n        case $DB_ENGINE in\n          \"MYSQL_8.0\")\n            echo \"deb https://$ORIGIN/ $OS_CODE_NAME percona-server-server-8.0\" \u003e /etc/apt/sources.list.d/percona-mysql.list\n            apt -y update\n            DEBIAN_FRONTEND=noninteractive apt -y install percona-server-client percona-server-server\n            ;;\n          \"MARIADB_10.11\")\n            apt -y update\n            apt -y install mariadb-server\n            ;;\n          \"MARIADB_11.4\")\n            wget -qO- https://mariadb.org/mariadb_release_signing_key.asc | gpg --dearmor \u003e /etc/apt/trusted.gpg.d/mariadb.gpg\n            echo \"deb [arch=amd64,arm64] https://mirror.mariadb.org/repo/11.4/ubuntu noble main\" \u003e /etc/apt/sources.list.d/mariadb.list\n            apt -y update\n            apt -y install mariadb-server\n            ;;\n          *)\n            die \"Database Engine $DB_ENGINE not supported.\"\n            ;;\n        esac\n        ;;\n      *)\n        die \"Unsupported Ubuntu version: $OS_VERSION.\"\n        ;;\n    esac\n  else\n    die \"Unsupported OS: $OS_NAME.\"\n  fi\n}\n\nsetupCloudPanel()\n{\n  DEBIAN_FRONTEND=noninteractive apt -o Dpkg::Options::=\"--force-overwrite\" install -y cloudpanel\n  local CLP_RUNNING=$(lsof -u^root -i:8443 -P -n -sTCP:LISTEN)\n  if [ -z \"${CLP_RUNNING}\" ]; then\n    die \"${RED_TEXT_COLOR}CloudPanel couldn't be installed. Check the log above for errors that occurred in the install process.${RESET_TEXT_COLOR}\"\n  fi\n  showSuccessMessage\n}\n\nshowSuccessMessage()\n{\n  CLOUDPANEL_URL=\"https://$IP:8443\"\n  printf \"\\n\\n\"\n  printf \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"\n  printf \"${GREEN_TEXT_COLOR}The installation of CloudPanel is complete!${RESET_TEXT_COLOR}\\n\\n\"\n  printf \"CloudPanel can be accessed now:${YELLOW_TEXT_COLOR} $CLOUDPANEL_URL ${RESET_TEXT_COLOR}\\n\"\n  printf \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"\n}\n\ncleanUp()\n{\n  history -c\n  apt clean\n}\n\nsetOSInfo\ncheckRequirements\nsetIp\nsetupRequiredPackages\ngenerateLocales\nremoveUnnecessaryPackages\ninstallMySQL\nsetupCloudPanel\ncleanUp",
            "min_cpu_platform": "",
            "name": "test-vm",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.41.64.212",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "internal_ipv6_prefix_length": 0,
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "ipv6_address": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/sylvan-hydra-464608-p3/global/networks/default",
                "network_attachment": "",
                "network_ip": "10.128.15.210",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/sylvan-hydra-464608-p3/regions/us-central1/subnetworks/default",
                "subnetwork_project": "sylvan-hydra-464608-p3"
              }
            ],
            "network_performance_config": [],
            "params": [],
            "project": "sylvan-hydra-464608-p3",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "availability_domain": 0,
                "instance_termination_action": "",
                "local_ssd_recovery_timeout": [],
                "max_run_duration": [],
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "on_instance_stop_action": [],
                "preemptible": false,
                "provisioning_model": "STANDARD",
                "termination_time": ""
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/sylvan-hydra-464608-p3/zones/us-central1-a/instances/test-vm",
            "service_account": [
              {
                "email": "630169430430-compute@developer.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "http-server",
              "https-server",
              "ssh"
            ],
            "tags_fingerprint": "xEi19su0rvw=",
            "terraform_labels": {
              "goog-terraform-provisioned": "true"
            },
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "boot_disk"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "disk_encryption_key_raw"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "boot_disk"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "disk_encryption_key_rsa"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "google_project_service.compute"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_project_service",
      "name": "compute",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "sylvan-hydra-464608-p3/compute.googleapis.com",
            "project": "sylvan-hydra-464608-p3",
            "service": "compute.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    }
  ],
  "check_results": null
}
